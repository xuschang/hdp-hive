PREHOOK: query: explain
select  
  cd_gender,
  cd_marital_status,
  cd_education_status,
  count(*) cnt1,
  cd_purchase_estimate,
  count(*) cnt2,
  cd_credit_rating,
  count(*) cnt3
 from
  customer c,customer_address ca,customer_demographics
 where
  c.c_current_addr_sk = ca.ca_address_sk and
  ca_state in ('CO','IL','MN') and
  cd_demo_sk = c.c_current_cdemo_sk and 
  exists (select *
          from store_sales,date_dim
          where c.c_customer_sk = ss_customer_sk and
                ss_sold_date_sk = d_date_sk and
                d_year = 1999 and
                d_moy between 1 and 1+2) and
   (not exists (select *
            from web_sales,date_dim
            where c.c_customer_sk = ws_bill_customer_sk and
                  ws_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 and 1+2) and
    not exists (select * 
            from catalog_sales,date_dim
            where c.c_customer_sk = cs_ship_customer_sk and
                  cs_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 and 1+2))
 group by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 order by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 limit 100
PREHOOK: type: QUERY
PREHOOK: Input: default@catalog_sales
PREHOOK: Input: default@customer
PREHOOK: Input: default@customer_address
PREHOOK: Input: default@customer_demographics
PREHOOK: Input: default@date_dim
PREHOOK: Input: default@store_sales
PREHOOK: Input: default@web_sales
PREHOOK: Output: hdfs://### HDFS PATH ###
POSTHOOK: query: explain
select  
  cd_gender,
  cd_marital_status,
  cd_education_status,
  count(*) cnt1,
  cd_purchase_estimate,
  count(*) cnt2,
  cd_credit_rating,
  count(*) cnt3
 from
  customer c,customer_address ca,customer_demographics
 where
  c.c_current_addr_sk = ca.ca_address_sk and
  ca_state in ('CO','IL','MN') and
  cd_demo_sk = c.c_current_cdemo_sk and 
  exists (select *
          from store_sales,date_dim
          where c.c_customer_sk = ss_customer_sk and
                ss_sold_date_sk = d_date_sk and
                d_year = 1999 and
                d_moy between 1 and 1+2) and
   (not exists (select *
            from web_sales,date_dim
            where c.c_customer_sk = ws_bill_customer_sk and
                  ws_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 and 1+2) and
    not exists (select * 
            from catalog_sales,date_dim
            where c.c_customer_sk = cs_ship_customer_sk and
                  cs_sold_date_sk = d_date_sk and
                  d_year = 1999 and
                  d_moy between 1 and 1+2))
 group by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 order by cd_gender,
          cd_marital_status,
          cd_education_status,
          cd_purchase_estimate,
          cd_credit_rating
 limit 100
POSTHOOK: type: QUERY
POSTHOOK: Input: default@catalog_sales
POSTHOOK: Input: default@customer
POSTHOOK: Input: default@customer_address
POSTHOOK: Input: default@customer_demographics
POSTHOOK: Input: default@date_dim
POSTHOOK: Input: default@store_sales
POSTHOOK: Input: default@web_sales
POSTHOOK: Output: hdfs://### HDFS PATH ###
Plan optimized by CBO.

Vertex dependency in root stage
Reducer 12 <- Map 11 (SIMPLE_EDGE), Map 13 (SIMPLE_EDGE)
Reducer 14 <- Map 13 (SIMPLE_EDGE), Map 18 (SIMPLE_EDGE)
Reducer 15 <- Reducer 14 (SIMPLE_EDGE)
Reducer 16 <- Map 13 (SIMPLE_EDGE), Map 19 (SIMPLE_EDGE)
Reducer 17 <- Reducer 16 (SIMPLE_EDGE)
Reducer 2 <- Map 1 (SIMPLE_EDGE), Map 9 (SIMPLE_EDGE)
Reducer 3 <- Map 10 (SIMPLE_EDGE), Reducer 2 (SIMPLE_EDGE)
Reducer 4 <- Reducer 12 (SIMPLE_EDGE), Reducer 3 (SIMPLE_EDGE)
Reducer 5 <- Reducer 15 (SIMPLE_EDGE), Reducer 4 (SIMPLE_EDGE)
Reducer 6 <- Reducer 17 (SIMPLE_EDGE), Reducer 5 (SIMPLE_EDGE)
Reducer 7 <- Reducer 6 (SIMPLE_EDGE)
Reducer 8 <- Reducer 7 (SIMPLE_EDGE)

Stage-0
  Fetch Operator
    limit:100
    Stage-1
      Reducer 8 vectorized
      File Output Operator [FS_147]
        Limit [LIM_146] (rows=1 width=383)
          Number of rows:100
          Select Operator [SEL_145] (rows=1 width=383)
            Output:["_col0","_col1","_col2","_col3","_col4","_col5","_col6","_col7"]
          <-Reducer 7 [SIMPLE_EDGE] vectorized
            SHUFFLE [RS_144]
              Select Operator [SEL_143] (rows=1 width=383)
                Output:["_col0","_col1","_col2","_col3","_col4","_col6"]
                Group By Operator [GBY_142] (rows=1 width=367)
                  Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["count(VALUE._col0)"],keys:KEY._col0, KEY._col1, KEY._col2, KEY._col3, KEY._col4
                <-Reducer 6 [SIMPLE_EDGE]
                  SHUFFLE [RS_69]
                    PartitionCols:_col0, _col1, _col2, _col3, _col4
                    Group By Operator [GBY_68] (rows=1 width=367)
                      Output:["_col0","_col1","_col2","_col3","_col4","_col5"],aggregations:["count()"],keys:_col6, _col7, _col8, _col9, _col10
                      Select Operator [SEL_67] (rows=1 width=363)
                        Output:["_col6","_col7","_col8","_col9","_col10"]
                        Filter Operator [FIL_66] (rows=1 width=363)
                          predicate:_col14 is null
                          Merge Join Operator [MERGEJOIN_112] (rows=1 width=363)
                            Conds:RS_63._col0=RS_141._col0(Left Outer),Output:["_col6","_col7","_col8","_col9","_col10","_col14"]
                          <-Reducer 17 [SIMPLE_EDGE] vectorized
                            SHUFFLE [RS_141]
                              PartitionCols:_col0
                              Select Operator [SEL_140] (rows=115467 width=7)
                                Output:["_col0","_col1"]
                                Group By Operator [GBY_139] (rows=115467 width=3)
                                  Output:["_col0"],keys:KEY._col0
                                <-Reducer 16 [SIMPLE_EDGE]
                                  SHUFFLE [RS_60]
                                    PartitionCols:_col0
                                    Group By Operator [GBY_59] (rows=115467 width=3)
                                      Output:["_col0"],keys:_col1
                                      Merge Join Operator [MERGEJOIN_109] (rows=23255411 width=3)
                                        Conds:RS_138._col0=RS_129._col0(Inner),Output:["_col1"]
                                      <-Map 13 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_129]
                                          PartitionCols:_col0
                                          Select Operator [SEL_126] (rows=150 width=12)
                                            Output:["_col0"]
                                            Filter Operator [FIL_125] (rows=150 width=12)
                                              predicate:((d_year = 1999) and d_date_sk is not null and d_moy BETWEEN 1 AND 3)
                                              TableScan [TS_12] (rows=73049 width=12)
                                                default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:["d_date_sk","d_year","d_moy"]
                                      <-Map 19 [SIMPLE_EDGE] vectorized
                                        SHUFFLE [RS_138]
                                          PartitionCols:_col0
                                          Select Operator [SEL_137] (rows=285115246 width=7)
                                            Output:["_col0","_col1"]
                                            Filter Operator [FIL_136] (rows=285115246 width=7)
                                              predicate:(cs_ship_customer_sk is not null and cs_sold_date_sk is not null)
                                              TableScan [TS_49] (rows=287989836 width=7)
                                                default@catalog_sales,catalog_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["cs_sold_date_sk","cs_ship_customer_sk"]
                          <-Reducer 5 [SIMPLE_EDGE]
                            SHUFFLE [RS_63]
                              PartitionCols:_col0
                              Select Operator [SEL_48] (rows=1 width=367)
                                Output:["_col0","_col6","_col7","_col8","_col9","_col10"]
                                Filter Operator [FIL_47] (rows=1 width=367)
                                  predicate:_col12 is null
                                  Merge Join Operator [MERGEJOIN_111] (rows=33 width=367)
                                    Conds:RS_44._col0=RS_135._col0(Left Outer),Output:["_col0","_col6","_col7","_col8","_col9","_col10","_col12"]
                                  <-Reducer 15 [SIMPLE_EDGE] vectorized
                                    SHUFFLE [RS_135]
                                      PartitionCols:_col0
                                      Select Operator [SEL_134] (rows=116289 width=7)
                                        Output:["_col0","_col1"]
                                        Group By Operator [GBY_133] (rows=116289 width=3)
                                          Output:["_col0"],keys:KEY._col0
                                        <-Reducer 14 [SIMPLE_EDGE]
                                          SHUFFLE [RS_30]
                                            PartitionCols:_col0
                                            Group By Operator [GBY_29] (rows=116289 width=3)
                                              Output:["_col0"],keys:_col1
                                              Merge Join Operator [MERGEJOIN_108] (rows=11823304 width=3)
                                                Conds:RS_132._col0=RS_128._col0(Inner),Output:["_col1"]
                                              <-Map 13 [SIMPLE_EDGE] vectorized
                                                SHUFFLE [RS_128]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_126]
                                              <-Map 18 [SIMPLE_EDGE] vectorized
                                                SHUFFLE [RS_132]
                                                  PartitionCols:_col0
                                                  Select Operator [SEL_131] (rows=143930993 width=7)
                                                    Output:["_col0","_col1"]
                                                    Filter Operator [FIL_130] (rows=143930993 width=7)
                                                      predicate:(ws_bill_customer_sk is not null and ws_sold_date_sk is not null)
                                                      TableScan [TS_19] (rows=144002668 width=7)
                                                        default@web_sales,web_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ws_sold_date_sk","ws_bill_customer_sk"]
                                  <-Reducer 4 [SIMPLE_EDGE]
                                    SHUFFLE [RS_44]
                                      PartitionCols:_col0
                                      Merge Join Operator [MERGEJOIN_110] (rows=6841 width=363)
                                        Conds:RS_41._col0=RS_42._col0(Left Semi),Output:["_col0","_col6","_col7","_col8","_col9","_col10"]
                                      <-Reducer 12 [SIMPLE_EDGE]
                                        SHUFFLE [RS_42]
                                          PartitionCols:_col0
                                          Group By Operator [GBY_40] (rows=116289 width=1)
                                            Output:["_col0"],keys:_col0
                                            Select Operator [SEL_18] (rows=43153353 width=1)
                                              Output:["_col0"]
                                              Merge Join Operator [MERGEJOIN_107] (rows=43153353 width=1)
                                                Conds:RS_124._col0=RS_127._col0(Inner),Output:["_col1"]
                                              <-Map 13 [SIMPLE_EDGE] vectorized
                                                SHUFFLE [RS_127]
                                                  PartitionCols:_col0
                                                   Please refer to the previous Select Operator [SEL_126]
                                              <-Map 11 [SIMPLE_EDGE] vectorized
                                                SHUFFLE [RS_124]
                                                  PartitionCols:_col0
                                                  Select Operator [SEL_123] (rows=525327388 width=7)
                                                    Output:["_col0","_col1"]
                                                    Filter Operator [FIL_122] (rows=525327388 width=7)
                                                      predicate:(ss_customer_sk is not null and ss_sold_date_sk is not null)
                                                      TableScan [TS_9] (rows=575995635 width=7)
                                                        default@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:["ss_sold_date_sk","ss_customer_sk"]
                                      <-Reducer 3 [SIMPLE_EDGE]
                                        SHUFFLE [RS_41]
                                          PartitionCols:_col0
                                          Merge Join Operator [MERGEJOIN_106] (rows=4605476 width=363)
                                            Conds:RS_36._col1=RS_121._col0(Inner),Output:["_col0","_col6","_col7","_col8","_col9","_col10"]
                                          <-Map 10 [SIMPLE_EDGE] vectorized
                                            SHUFFLE [RS_121]
                                              PartitionCols:_col0
                                              Select Operator [SEL_120] (rows=1861800 width=363)
                                                Output:["_col0","_col1","_col2","_col3","_col4","_col5"]
                                                Filter Operator [FIL_119] (rows=1861800 width=363)
                                                  predicate:cd_demo_sk is not null
                                                  TableScan [TS_6] (rows=1861800 width=363)
                                                    default@customer_demographics,customer_demographics,Tbl:COMPLETE,Col:COMPLETE,Output:["cd_demo_sk","cd_gender","cd_marital_status","cd_education_status","cd_purchase_estimate","cd_credit_rating"]
                                          <-Reducer 2 [SIMPLE_EDGE]
                                            SHUFFLE [RS_36]
                                              PartitionCols:_col1
                                              Merge Join Operator [MERGEJOIN_105] (rows=4541258 width=5)
                                                Conds:RS_115._col2=RS_118._col0(Inner),Output:["_col0","_col1"]
                                              <-Map 1 [SIMPLE_EDGE] vectorized
                                                SHUFFLE [RS_115]
                                                  PartitionCols:_col2
                                                  Select Operator [SEL_114] (rows=77201384 width=11)
                                                    Output:["_col0","_col1","_col2"]
                                                    Filter Operator [FIL_113] (rows=77201384 width=11)
                                                      predicate:(c_current_addr_sk is not null and c_current_cdemo_sk is not null and c_customer_sk is not null)
                                                      TableScan [TS_0] (rows=80000000 width=11)
                                                        default@customer,c,Tbl:COMPLETE,Col:COMPLETE,Output:["c_customer_sk","c_current_cdemo_sk","c_current_addr_sk"]
                                              <-Map 9 [SIMPLE_EDGE] vectorized
                                                SHUFFLE [RS_118]
                                                  PartitionCols:_col0
                                                  Select Operator [SEL_117] (rows=2352941 width=90)
                                                    Output:["_col0"]
                                                    Filter Operator [FIL_116] (rows=2352941 width=90)
                                                      predicate:((ca_state) IN ('CO', 'IL', 'MN') and ca_address_sk is not null)
                                                      TableScan [TS_3] (rows=40000000 width=90)
                                                        default@customer_address,ca,Tbl:COMPLETE,Col:COMPLETE,Output:["ca_address_sk","ca_state"]

