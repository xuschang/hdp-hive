PREHOOK: query: EXPLAIN VECTORIZATION ONLY EXPRESSION SELECT cdouble, cstring1, cint, cfloat, csmallint,
  case
    when (cdouble is not null) then cdouble
    when (cstring1 is not null) then cstring1
    when (cint is not null) then cint
    when (cfloat is not null) then cfloat
    when (csmallint is not null) then csmallint
    else "none"
    end as c
FROM alltypesorc
WHERE (cdouble IS NULL)
ORDER BY cdouble, cstring1, cint, cfloat, csmallint, c
LIMIT 20
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN VECTORIZATION ONLY EXPRESSION SELECT cdouble, cstring1, cint, cfloat, csmallint,
  case
    when (cdouble is not null) then cdouble
    when (cstring1 is not null) then cstring1
    when (cint is not null) then cint
    when (cfloat is not null) then cfloat
    when (csmallint is not null) then csmallint
    else "none"
    end as c
FROM alltypesorc
WHERE (cdouble IS NULL)
ORDER BY cdouble, cstring1, cint, cfloat, csmallint, c
LIMIT 20
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
      Vertices:
        Map 1 
            Map Operator Tree:
                  TableScan Vectorization:
                      native: true
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: SelectColumnIsNull(col 5:double)
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [6, 2, 4, 1, 24]
                          selectExpressions: IfExprColumnCondExpr(col 13:boolean, col 6:stringcol 23:string)(children: IsNotNull(col 6:string) -> 13:boolean, col 6:string, IfExprCondExprCondExpr(col 14:boolean, col 15:stringcol 22:string)(children: IsNotNull(col 2:int) -> 14:boolean, CastLongToString(col 2:int) -> 15:string, IfExprCondExprCondExpr(col 16:boolean, col 17:stringcol 21:string)(children: IsNotNull(col 4:float) -> 16:boolean, CastFloatToString(col 4:float) -> 17:string, IfExprCondExprColumn(col 18:boolean, col 19:string, col 20:string)(children: IsNotNull(col 1:smallint) -> 18:boolean, CastLongToString(col 1:smallint) -> 19:string, ConstantVectorExpression(val none) -> 20:string) -> 21:string) -> 22:string) -> 23:string) -> 24:string
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkObjectHashOperator
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
            Reduce Operator Tree:
                Select Vectorization:
                    className: VectorSelectOperator
                    native: true
                    projectedOutputColumnNums: [0, 1, 2, 3, 4]
                  Limit Vectorization:
                      className: VectorLimitOperator
                      native: true
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [5, 0, 1, 2, 3, 4]
                        selectExpressions: ConstantVectorExpression(val null) -> 5:double
                      File Sink Vectorization:
                          className: VectorFileSinkOperator
                          native: false

  Stage: Stage-0
    Fetch Operator

PREHOOK: query: SELECT cdouble, cstring1, cint, cfloat, csmallint,
  case
    when (cdouble is not null) then cdouble
    when (cstring1 is not null) then cstring1
    when (cint is not null) then cint
    when (cfloat is not null) then cfloat
    when (csmallint is not null) then csmallint
    else "none"
    end as c
FROM alltypesorc
WHERE (cdouble IS NULL)
ORDER BY cdouble, cstring1, cint, cfloat, csmallint, c
LIMIT 20
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: SELECT cdouble, cstring1, cint, cfloat, csmallint,
  case
    when (cdouble is not null) then cdouble
    when (cstring1 is not null) then cstring1
    when (cint is not null) then cint
    when (cfloat is not null) then cfloat
    when (csmallint is not null) then csmallint
    else "none"
    end as c
FROM alltypesorc
WHERE (cdouble IS NULL)
ORDER BY cdouble, cstring1, cint, cfloat, csmallint, c
LIMIT 20
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
NULL	NULL	-207014540	11.0	NULL	-207014540
NULL	NULL	-262998236	11.0	NULL	-262998236
NULL	NULL	-31312632	-51.0	NULL	-31312632
NULL	NULL	-337975743	-51.0	NULL	-337975743
NULL	NULL	-413196097	-51.0	NULL	-413196097
NULL	NULL	-413553449	11.0	NULL	-413553449
NULL	NULL	-457224565	11.0	NULL	-457224565
NULL	NULL	-591488718	-51.0	NULL	-591488718
NULL	NULL	-65507877	11.0	NULL	-65507877
NULL	NULL	-656987896	8.0	NULL	-656987896
NULL	NULL	-670908417	8.0	NULL	-670908417
NULL	NULL	-738306196	-51.0	NULL	-738306196
NULL	NULL	-819152895	8.0	NULL	-819152895
NULL	NULL	-827212561	8.0	NULL	-827212561
NULL	NULL	-949587513	11.0	NULL	-949587513
NULL	NULL	194400893	-51.0	NULL	194400893
NULL	NULL	19970255	11.0	NULL	19970255
NULL	NULL	21749133	8.0	NULL	21749133
NULL	NULL	33589012	8.0	NULL	33589012
NULL	NULL	6981	11.0	NULL	6981
PREHOOK: query: EXPLAIN VECTORIZATION ONLY EXPRESSION SELECT cdouble, cstring1, cint, cfloat, csmallint,
  case
    when (cdouble is not null) then cdouble
    when (cstring1 is not null) then cstring1
    when (cint is not null) then cint
    when (cfloat is not null) then cfloat
    when (csmallint is not null) then csmallint
    else "none"
    end as c
FROM alltypesorc
WHERE (cdouble IS NULL)
ORDER BY cdouble, cstring1, cint, cfloat, csmallint, c
LIMIT 20
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN VECTORIZATION ONLY EXPRESSION SELECT cdouble, cstring1, cint, cfloat, csmallint,
  case
    when (cdouble is not null) then cdouble
    when (cstring1 is not null) then cstring1
    when (cint is not null) then cint
    when (cfloat is not null) then cfloat
    when (csmallint is not null) then csmallint
    else "none"
    end as c
FROM alltypesorc
WHERE (cdouble IS NULL)
ORDER BY cdouble, cstring1, cint, cfloat, csmallint, c
LIMIT 20
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
      Vertices:
        Map 1 
            Map Operator Tree:
                  TableScan Vectorization:
                      native: true
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: SelectColumnIsTrue(col 13:boolean)(children: VectorUDFAdaptor(cdouble is null) -> 13:boolean)
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [6, 2, 4, 1, 21]
                          selectExpressions: VectorUDFAdaptor(CASE WHEN (cstring1 is not null) THEN (cstring1) WHEN (cint is not null) THEN (CAST( cint AS STRING)) WHEN (cfloat is not null) THEN (CAST( cfloat AS STRING)) WHEN (csmallint is not null) THEN (CAST( csmallint AS STRING)) ELSE ('none') END)(children: VectorUDFAdaptor(cstring1 is not null) -> 14:boolean, VectorUDFAdaptor(cint is not null) -> 15:boolean, VectorUDFAdaptor(CAST( cint AS STRING)) -> 16:string, VectorUDFAdaptor(cfloat is not null) -> 17:boolean, VectorUDFAdaptor(CAST( cfloat AS STRING)) -> 18:string, VectorUDFAdaptor(csmallint is not null) -> 19:boolean, VectorUDFAdaptor(CAST( csmallint AS STRING)) -> 20:string) -> 21:string
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkObjectHashOperator
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: true
                vectorized: true
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
            Reduce Operator Tree:
                Select Vectorization:
                    className: VectorSelectOperator
                    native: true
                    projectedOutputColumnNums: [0, 1, 2, 3, 4]
                  Limit Vectorization:
                      className: VectorLimitOperator
                      native: true
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [5, 0, 1, 2, 3, 4]
                        selectExpressions: ConstantVectorExpression(val null) -> 5:double
                      File Sink Vectorization:
                          className: VectorFileSinkOperator
                          native: false

  Stage: Stage-0
    Fetch Operator

PREHOOK: query: SELECT cdouble, cstring1, cint, cfloat, csmallint,
  case
    when (cdouble is not null) then cdouble
    when (cstring1 is not null) then cstring1
    when (cint is not null) then cint
    when (cfloat is not null) then cfloat
    when (csmallint is not null) then csmallint
    else "none"
    end as c
FROM alltypesorc
WHERE (cdouble IS NULL)
ORDER BY cdouble, cstring1, cint, cfloat, csmallint, c
LIMIT 20
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: SELECT cdouble, cstring1, cint, cfloat, csmallint,
  case
    when (cdouble is not null) then cdouble
    when (cstring1 is not null) then cstring1
    when (cint is not null) then cint
    when (cfloat is not null) then cfloat
    when (csmallint is not null) then csmallint
    else "none"
    end as c
FROM alltypesorc
WHERE (cdouble IS NULL)
ORDER BY cdouble, cstring1, cint, cfloat, csmallint, c
LIMIT 20
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
NULL	NULL	-207014540	11.0	NULL	-207014540
NULL	NULL	-262998236	11.0	NULL	-262998236
NULL	NULL	-31312632	-51.0	NULL	-31312632
NULL	NULL	-337975743	-51.0	NULL	-337975743
NULL	NULL	-413196097	-51.0	NULL	-413196097
NULL	NULL	-413553449	11.0	NULL	-413553449
NULL	NULL	-457224565	11.0	NULL	-457224565
NULL	NULL	-591488718	-51.0	NULL	-591488718
NULL	NULL	-65507877	11.0	NULL	-65507877
NULL	NULL	-656987896	8.0	NULL	-656987896
NULL	NULL	-670908417	8.0	NULL	-670908417
NULL	NULL	-738306196	-51.0	NULL	-738306196
NULL	NULL	-819152895	8.0	NULL	-819152895
NULL	NULL	-827212561	8.0	NULL	-827212561
NULL	NULL	-949587513	11.0	NULL	-949587513
NULL	NULL	194400893	-51.0	NULL	194400893
NULL	NULL	19970255	11.0	NULL	19970255
NULL	NULL	21749133	8.0	NULL	21749133
NULL	NULL	33589012	8.0	NULL	33589012
NULL	NULL	6981	11.0	NULL	6981
PREHOOK: query: EXPLAIN VECTORIZATION ONLY EXPRESSION SELECT cdouble, cstring1, cint, cfloat, csmallint,
  case
    when (cdouble is not null) then cdouble
    when (cstring1 is not null) then cstring1
    when (cint is not null) then cint
    when (cfloat is not null) then cfloat
    when (csmallint is not null) then csmallint
    else null
    end as c
FROM alltypesorc
WHERE (cdouble IS NULL)
ORDER BY cdouble, cstring1, cint, cfloat, csmallint, c
LIMIT 20
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN VECTORIZATION ONLY EXPRESSION SELECT cdouble, cstring1, cint, cfloat, csmallint,
  case
    when (cdouble is not null) then cdouble
    when (cstring1 is not null) then cstring1
    when (cint is not null) then cint
    when (cfloat is not null) then cfloat
    when (csmallint is not null) then csmallint
    else null
    end as c
FROM alltypesorc
WHERE (cdouble IS NULL)
ORDER BY cdouble, cstring1, cint, cfloat, csmallint, c
LIMIT 20
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
      Vertices:
        Map 1 
            Map Operator Tree:
                  TableScan Vectorization:
                      native: true
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: SelectColumnIsNull(col 5:double)
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [6, 2, 4, 1, 23]
                          selectExpressions: IfExprColumnCondExpr(col 13:boolean, col 6:stringcol 22:string)(children: IsNotNull(col 6:string) -> 13:boolean, col 6:string, IfExprCondExprCondExpr(col 14:boolean, col 15:stringcol 21:string)(children: IsNotNull(col 2:int) -> 14:boolean, CastLongToString(col 2:int) -> 15:string, IfExprCondExprCondExpr(col 16:boolean, col 17:stringcol 20:string)(children: IsNotNull(col 4:float) -> 16:boolean, CastFloatToString(col 4:float) -> 17:string, IfExprCondExprNull(col 18:boolean, col 19:string, null)(children: IsNotNull(col 1:smallint) -> 18:boolean, CastLongToString(col 1:smallint) -> 19:string) -> 20:string) -> 21:string) -> 22:string) -> 23:string
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkObjectHashOperator
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: false
                vectorized: true
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
            Reduce Operator Tree:
                Select Vectorization:
                    className: VectorSelectOperator
                    native: true
                    projectedOutputColumnNums: [0, 1, 2, 3, 4]
                  Limit Vectorization:
                      className: VectorLimitOperator
                      native: true
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [5, 0, 1, 2, 3, 4]
                        selectExpressions: ConstantVectorExpression(val null) -> 5:double
                      File Sink Vectorization:
                          className: VectorFileSinkOperator
                          native: false

  Stage: Stage-0
    Fetch Operator

PREHOOK: query: SELECT cdouble, cstring1, cint, cfloat, csmallint,
  case
    when (cdouble is not null) then cdouble
    when (cstring1 is not null) then cstring1
    when (cint is not null) then cint
    when (cfloat is not null) then cfloat
    when (csmallint is not null) then csmallint
    else null
    end as c
FROM alltypesorc
WHERE (cdouble IS NULL)
ORDER BY cdouble, cstring1, cint, cfloat, csmallint, c
LIMIT 20
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: SELECT cdouble, cstring1, cint, cfloat, csmallint,
  case
    when (cdouble is not null) then cdouble
    when (cstring1 is not null) then cstring1
    when (cint is not null) then cint
    when (cfloat is not null) then cfloat
    when (csmallint is not null) then csmallint
    else null
    end as c
FROM alltypesorc
WHERE (cdouble IS NULL)
ORDER BY cdouble, cstring1, cint, cfloat, csmallint, c
LIMIT 20
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
NULL	NULL	-207014540	11.0	NULL	-207014540
NULL	NULL	-262998236	11.0	NULL	-262998236
NULL	NULL	-31312632	-51.0	NULL	-31312632
NULL	NULL	-337975743	-51.0	NULL	-337975743
NULL	NULL	-413196097	-51.0	NULL	-413196097
NULL	NULL	-413553449	11.0	NULL	-413553449
NULL	NULL	-457224565	11.0	NULL	-457224565
NULL	NULL	-591488718	-51.0	NULL	-591488718
NULL	NULL	-65507877	11.0	NULL	-65507877
NULL	NULL	-656987896	8.0	NULL	-656987896
NULL	NULL	-670908417	8.0	NULL	-670908417
NULL	NULL	-738306196	-51.0	NULL	-738306196
NULL	NULL	-819152895	8.0	NULL	-819152895
NULL	NULL	-827212561	8.0	NULL	-827212561
NULL	NULL	-949587513	11.0	NULL	-949587513
NULL	NULL	194400893	-51.0	NULL	194400893
NULL	NULL	19970255	11.0	NULL	19970255
NULL	NULL	21749133	8.0	NULL	21749133
NULL	NULL	33589012	8.0	NULL	33589012
NULL	NULL	6981	11.0	NULL	6981
PREHOOK: query: EXPLAIN VECTORIZATION ONLY EXPRESSION SELECT cdouble, cstring1, cint, cfloat, csmallint,
  case
    when (cdouble is not null) then cdouble
    when (cstring1 is not null) then cstring1
    when (cint is not null) then cint
    when (cfloat is not null) then cfloat
    when (csmallint is not null) then csmallint
    else null
    end as c
FROM alltypesorc
WHERE (cdouble IS NULL)
ORDER BY cdouble, cstring1, cint, cfloat, csmallint, c
LIMIT 20
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: EXPLAIN VECTORIZATION ONLY EXPRESSION SELECT cdouble, cstring1, cint, cfloat, csmallint,
  case
    when (cdouble is not null) then cdouble
    when (cstring1 is not null) then cstring1
    when (cint is not null) then cint
    when (cfloat is not null) then cfloat
    when (csmallint is not null) then csmallint
    else null
    end as c
FROM alltypesorc
WHERE (cdouble IS NULL)
ORDER BY cdouble, cstring1, cint, cfloat, csmallint, c
LIMIT 20
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
PLAN VECTORIZATION:
  enabled: true
  enabledConditionsMet: [hive.vectorized.execution.enabled IS true]

STAGE DEPENDENCIES:
  Stage-1 is a root stage
  Stage-0 depends on stages: Stage-1

STAGE PLANS:
  Stage: Stage-1
    Tez
      Edges:
        Reducer 2 <- Map 1 (SIMPLE_EDGE)
      Vertices:
        Map 1 
            Map Operator Tree:
                  TableScan Vectorization:
                      native: true
                    Filter Vectorization:
                        className: VectorFilterOperator
                        native: true
                        predicateExpression: SelectColumnIsTrue(col 13:boolean)(children: VectorUDFAdaptor(cdouble is null) -> 13:boolean)
                      Select Vectorization:
                          className: VectorSelectOperator
                          native: true
                          projectedOutputColumnNums: [6, 2, 4, 1, 21]
                          selectExpressions: VectorUDFAdaptor(CASE WHEN (cstring1 is not null) THEN (cstring1) WHEN (cint is not null) THEN (CAST( cint AS STRING)) WHEN (cfloat is not null) THEN (CAST( cfloat AS STRING)) WHEN (csmallint is not null) THEN (CAST( csmallint AS STRING)) ELSE (null) END)(children: VectorUDFAdaptor(cstring1 is not null) -> 14:boolean, VectorUDFAdaptor(cint is not null) -> 15:boolean, VectorUDFAdaptor(CAST( cint AS STRING)) -> 16:string, VectorUDFAdaptor(cfloat is not null) -> 17:boolean, VectorUDFAdaptor(CAST( cfloat AS STRING)) -> 18:string, VectorUDFAdaptor(csmallint is not null) -> 19:boolean, VectorUDFAdaptor(CAST( csmallint AS STRING)) -> 20:string) -> 21:string
                        Reduce Sink Vectorization:
                            className: VectorReduceSinkObjectHashOperator
                            native: true
                            nativeConditionsMet: hive.vectorized.execution.reducesink.new.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true, No PTF TopN IS true, No DISTINCT columns IS true, BinarySortableSerDe for keys IS true, LazyBinarySerDe for values IS true
            Execution mode: vectorized, llap
            LLAP IO: all inputs
            Map Vectorization:
                enabled: true
                enabledConditionsMet: hive.vectorized.use.vectorized.input.format IS true
                inputFormatFeatureSupport: [DECIMAL_64]
                featureSupportInUse: [DECIMAL_64]
                inputFileFormats: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat
                allNative: true
                usesVectorUDFAdaptor: true
                vectorized: true
        Reducer 2 
            Execution mode: vectorized, llap
            Reduce Vectorization:
                enabled: true
                enableConditionsMet: hive.vectorized.execution.reduce.enabled IS true, hive.execution.engine tez IN [tez, spark] IS true
                allNative: false
                usesVectorUDFAdaptor: false
                vectorized: true
            Reduce Operator Tree:
                Select Vectorization:
                    className: VectorSelectOperator
                    native: true
                    projectedOutputColumnNums: [0, 1, 2, 3, 4]
                  Limit Vectorization:
                      className: VectorLimitOperator
                      native: true
                    Select Vectorization:
                        className: VectorSelectOperator
                        native: true
                        projectedOutputColumnNums: [5, 0, 1, 2, 3, 4]
                        selectExpressions: ConstantVectorExpression(val null) -> 5:double
                      File Sink Vectorization:
                          className: VectorFileSinkOperator
                          native: false

  Stage: Stage-0
    Fetch Operator

PREHOOK: query: SELECT cdouble, cstring1, cint, cfloat, csmallint,
  case
    when (cdouble is not null) then cdouble
    when (cstring1 is not null) then cstring1
    when (cint is not null) then cint
    when (cfloat is not null) then cfloat
    when (csmallint is not null) then csmallint
    else null
    end as c
FROM alltypesorc
WHERE (cdouble IS NULL)
ORDER BY cdouble, cstring1, cint, cfloat, csmallint, c
LIMIT 20
PREHOOK: type: QUERY
PREHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
POSTHOOK: query: SELECT cdouble, cstring1, cint, cfloat, csmallint,
  case
    when (cdouble is not null) then cdouble
    when (cstring1 is not null) then cstring1
    when (cint is not null) then cint
    when (cfloat is not null) then cfloat
    when (csmallint is not null) then csmallint
    else null
    end as c
FROM alltypesorc
WHERE (cdouble IS NULL)
ORDER BY cdouble, cstring1, cint, cfloat, csmallint, c
LIMIT 20
POSTHOOK: type: QUERY
POSTHOOK: Input: default@alltypesorc
#### A masked pattern was here ####
NULL	NULL	-207014540	11.0	NULL	-207014540
NULL	NULL	-262998236	11.0	NULL	-262998236
NULL	NULL	-31312632	-51.0	NULL	-31312632
NULL	NULL	-337975743	-51.0	NULL	-337975743
NULL	NULL	-413196097	-51.0	NULL	-413196097
NULL	NULL	-413553449	11.0	NULL	-413553449
NULL	NULL	-457224565	11.0	NULL	-457224565
NULL	NULL	-591488718	-51.0	NULL	-591488718
NULL	NULL	-65507877	11.0	NULL	-65507877
NULL	NULL	-656987896	8.0	NULL	-656987896
NULL	NULL	-670908417	8.0	NULL	-670908417
NULL	NULL	-738306196	-51.0	NULL	-738306196
NULL	NULL	-819152895	8.0	NULL	-819152895
NULL	NULL	-827212561	8.0	NULL	-827212561
NULL	NULL	-949587513	11.0	NULL	-949587513
NULL	NULL	194400893	-51.0	NULL	194400893
NULL	NULL	19970255	11.0	NULL	19970255
NULL	NULL	21749133	8.0	NULL	21749133
NULL	NULL	33589012	8.0	NULL	33589012
NULL	NULL	6981	11.0	NULL	6981
